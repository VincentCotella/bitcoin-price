services:
  inference:
    image: vincentcotella/bitcoin-pi-inference:latest
    container_name: btc-scorer
    restart: unless-stopped
    ports:
      - "8000:8000"   # /predict
      - "8001:8001"   # /metrics
    volumes:
      - ./data:/app/data
      - ./model:/app/model

  pipeline:
    image: python:3.10-slim
    container_name: btc-pipeline
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        while true; do
          python src/ingest.py &&
          python src/predict_and_log.py &&
          sleep 60;
        done
      "
    depends_on:
      - inference

  retrainer:
    image: python:3.10-slim
    container_name: btc-retrainer
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt mlflow &&
        while true; do
          python src/train.py &&
          python src/export_model_to_tflite.py &&
          sleep 1800;
        done
      "
    depends_on:
      - inference

  gui:
    image: vincentcotella/bitcoin-pi-gui:latest
    container_name: btc-gui
    restart: unless-stopped
    ports:
      - "8501:8501"  # Streamlit UI
    depends_on:
      - pipeline
      - retrainer

  mlflow:
    image: python:3.10-slim
    container_name: mlflow
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
      - mlruns:/app/mlruns
    ports:
      - "5000:5000"
    command: >
      sh -c "
        pip install --no-cache-dir mlflow &&
        mlflow server \
          --backend-store-uri sqlite:///mlflow.db \
          --default-artifact-root /app/mlruns \
          --host 0.0.0.0 --port 5000
      "

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
  mlruns:
